<?php
/**
 * @file
 * Etherpad lite client.
 *
 * Wrap Etherpad Lite API in some simple callbacks.
 */

/**
 * Implements hook_default_wsclient_service().
 */
function etherpad_lite_client_default_wsclient_service() {
  $default_parameter = array();
  $default_parameter['apikey'] = array(
    'type' => 'hidden',
    'default value' => variable_get('etherpad_lite_apikey'),
  );

  $service = new WSClientServiceDescription();
  $service->name = 'etherpad_lite';
  $service->label = 'Etherad lite';
  $service->url = variable_get('etherpad_lite_url', 'http://localhost:9001') . '/api/1/';
  $service->type = 'rest';

  $operation = array();
  $operation['label'] = 'createGroup';
  $operation['url'] = 'createGroup';
  $operation['parameter'] = $default_parameter;
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createGroup'] = $operation;

  $operation = array();
  $operation['label'] = 'deleteGroup';
  $operation['url'] = 'deleteGroup';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'groupID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['deleteGroup'] = $operation;

  $operation = array();
  $operation['label'] = 'createGroupIfNotExistsFor';
  $operation['url'] = 'createGroupIfNotExistsFor';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'groupMapper' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createGroupIfNotExistsFor'] = $operation;

  $operation = array();
  $operation['label'] = 'listPads';
  $operation['url'] = 'listPads';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'groupID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['listPads'] = $operation;

  $operation = array();
  $operation['label'] = 'createPad';
  $operation['url'] = 'createPad';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'text' => array(
      'type' => 'text',
    ),
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createPad'] = $operation;

  $operation = array();
  $operation['label'] = 'createGroupPad';
  $operation['url'] = 'createGroupPad';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'text' => array(
      'type' => 'text',
    ),
    'padName' => array(
      'type' => 'text',
    ),
    'groupID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createGroupPad'] = $operation;

  $operation = array();
  $operation['label'] = 'createAuthor';
  $operation['url'] = 'createAuthor';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'name' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createAuthor'] = $operation;

  $operation = array();
  $operation['label'] = 'createAuthorIfNotExistsFor';
  $operation['url'] = 'createAuthorIfNotExistsFor';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'name' => array(
      'type' => 'text',
    ),
    'authorMapper' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createAuthorIfNotExistsFor'] = $operation;

  $operation = array();
  $operation['label'] = 'createSession';
  $operation['url'] = 'createSession';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'validUntil' => array(
      'type' => 'text',
    ),
    'authorID' => array(
      'type' => 'text',
    ),
    'groupID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['createSession'] = $operation;

  $operation = array();
  $operation['label'] = 'deleteSession';
  $operation['url'] = 'deleteSession';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'sessionID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['deleteSession'] = $operation;

  $operation = array();
  $operation['label'] = 'getSessionInfo';
  $operation['url'] = 'getSessionInfo';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'sessionID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['getSessionInfo'] = $operation;

  $operation = array();
  $operation['label'] = 'listSessionsOfGroup';
  $operation['url'] = 'listSessionsOfGroup';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'groupID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['listSessionsOfGroup'] = $operation;

  $operation = array();
  $operation['label'] = 'listSessionsOfAuthor';
  $operation['url'] = 'listSessionsOfAuthor';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'authorID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['listSessionsOfAuthor'] = $operation;

  $operation = array();
  $operation['label'] = 'getText';
  $operation['url'] = 'getText';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'rev' => array(
      'type' => 'text',
    ),
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['getText'] = $operation;

  $operation = array();
  $operation['label'] = 'setText';
  $operation['url'] = 'setText';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'text' => array(
      'type' => 'text',
    ),
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['setText'] = $operation;

  $operation = array();
  $operation['label'] = 'getRevisionsCount';
  $operation['url'] = 'getRevisionsCount';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['getRevisionsCount'] = $operation;

  $operation = array();
  $operation['label'] = 'deletePad';
  $operation['url'] = 'deletePad';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['deletePad'] = $operation;

  $operation = array();
  $operation['label'] = 'getReadOnlyID';
  $operation['url'] = 'getReadOnlyID';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['getReadOnlyID'] = $operation;

  $operation = array();
  $operation['label'] = 'setPublicStatus';
  $operation['url'] = 'setPublicStatus';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'publicStatus' => array(
      'type' => 'text',
    ),
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['setPublicStatus'] = $operation;

  $operation = array();
  $operation['label'] = 'getPublicStatus';
  $operation['url'] = 'getPublicStatus';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['getPublicStatus'] = $operation;

  $operation = array();
  $operation['label'] = 'setPassword';
  $operation['url'] = 'setPassword';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'password' => array(
      'type' => 'text',
    ),
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['setPassword'] = $operation;

  $operation = array();
  $operation['label'] = 'isPasswordProtected';
  $operation['url'] = 'isPasswordProtected';
  $operation['parameter'] = $default_parameter;
  $operation['parameter'] += array(
    'padID' => array(
      'type' => 'text',
    ),
  );
  $operation['result'] = array('type' => 'text', 'label' => 'Result');
  $service->operations['isPasswordProtected'] = $operation;

  $services[$service->name] = $service;
  return $services;
}
